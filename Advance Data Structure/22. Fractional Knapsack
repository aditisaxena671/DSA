//GeeksForGeeks Link: https://practice.geeksforgeeks.org/problems/fractional-knapsack-1587115620/1

class Solution
{
    //Function to get the maximum total value in the knapsack.
    double fractionalKnapsack(int W, Item arr[], int n) 
    {
        // Your code here
        double ratio[][]= new double[n][2];
        for(int i=0;i<arr.length;i++){
            ratio[i][0]=i;
            ratio[i][1]=arr[i].value/(double)arr[i].weight;
        }
        Arrays.sort(ratio,Comparator.comparingDouble(o->o[1]));
        double value=0;
        int capacity=W;
        for(int i=n-1;i>=0;i--){
            int idx=(int)ratio[i][0];
            if(capacity>=arr[idx].weight){
                capacity-=arr[idx].weight;
                value+=arr[idx].value;
            }
            else{
                value+=(ratio[i][1]*capacity);
                break;
            }
        }
        return value;
    }
}
