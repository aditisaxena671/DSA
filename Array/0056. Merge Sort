package divideAndConquer;

public class mergeSort {
    public static void main(String args[]){
        int arr[]={6,1,9,2,7,2,7,1,0,4,-1};
        print(arr);
        mergeSortt(arr, 0, arr.length-1);
        print(arr);

    }
    public static void print(int arr[]){
        for(int i=0;i<arr.length;i++){
            System.err.print(arr[i]+" ");
        }
        System.out.println();
    }
    public static void mergeSortt(int arr[],int si,int ei){
        //base case
        if(si>=ei){
            return;
        }
        int mid=si+(ei-si)/2;
        mergeSortt(arr, si, mid);
        mergeSortt(arr, mid+1, ei);
        merge(arr,si,mid,ei);
    }
    public static void merge(int arr[], int si, int mid, int ei){
        int temp[]= new int[ei-si+1];
        int i=si;
        int j=mid+1;
        int k=0;
        while(i<=mid && j <=ei){
            if(arr[i]<arr[j]){
                temp[k++]=arr[i++];
            }
            else{
                temp[k++]=arr[j++];
            }
        }

        while(i<=mid){
            temp[k++]=arr[i++];
        }

        while(j<=ei){
            temp[k++]=arr[j++];
        }

        for(i=si,k=0;k<temp.length;i++,k++){
            arr[i]=temp[k];
        }

    }
}
