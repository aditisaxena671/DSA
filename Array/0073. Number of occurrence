//GeeksForGeeks Link : https://practice.geeksforgeeks.org/problems/number-of-occurrence2259/1

class Solution {
    int leftOccurence(int i,int x,int arr[]){
        int ans=0;
        while(i>=0 && arr[i]==x){
            ans=i;
            i--;
        }
        return ans;
    }
    int rightOccurence(int i,int x,int arr[]){
        int ans=0;
        while(i < arr.length && arr[i]==x){
            ans=i;
            i++;
        }
        return ans;
    }
    int count(int[] arr, int n, int x) {
        // code here
        int s=0;
        int e=n-1;
        int left=-1;
        int right=-1;
        while(s<=e){
            int mid=(s+e)/2;
            if(arr[mid]==x){
                left=leftOccurence(mid,x,arr);
                right=rightOccurence(mid,x,arr);
                break;
                
            }
            else if(arr[mid]>x){
                e=mid-1;
            }
            else{
                s=mid+1;
            }
        }
        if(right==-1 && left==-1){
            return 0;
        }
        return (right-left+1);
    }
}
