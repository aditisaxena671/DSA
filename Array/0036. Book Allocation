//GeeksForGeeks Link: https://practice.geeksforgeeks.org/problems/allocate-minimum-number-of-pages0937/1
class Solution 
{
    public:
    bool isPossible(int A[], int N, int M, int mid){
        int count=1;
        int pagesum=0;
        for(int i=0;i<N;i++){
            if(pagesum+A[i]<=mid){
                pagesum+=A[i];
            }
            else{
                count++;
                if(count>M || A[i]>mid){
                    return false;
                }
              pagesum=A[i];
            }
            
        }
        return true;
    }
    //Function to find minimum number of pages.
    int findPages(int A[], int N, int M) 
    {
        //code here
        if(N<M){
            return -1;
        }
        int s=0;
        int sum=0;
        int ans=-1;
        for(int i=0;i<N;i++){
            sum+=A[i];
        }
        int e=sum;
        int mid=s+(e-s)/2;
        while(s<=e){
            
            if(isPossible(A,N,M,mid)){
                ans=mid;
                e=mid-1;
            }
            else
                s=mid+1;
            mid=s+(e-s)/2;
        }
        return ans;
    }
};
