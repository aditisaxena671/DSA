package linkedList;
public class MergeSort {
    public static class Node{
        int data;
        Node next;
        Node(int data){
            this.data=data;
            this.next=null;
        }
    }
    public static Node head;
    public static Node tail;
    public void addAtLast(int data){
        Node newNode= new Node(data);
        if(head==null){
            head=tail=newNode;
            return;
        }
        tail.next=newNode;
        tail=newNode;
    }
    public static Node getMid(Node head){
        Node slow=head;
        Node fast=head.next;
        while(fast!=null && fast.next!=null){
            slow=slow.next;
            fast=fast.next.next;
        }
        return slow;
    }
    public static Node merge(Node head1,Node head2){
        Node MergedLL=new Node(-1);
        Node temp=MergedLL;
        while(head1!=null && head2!=null){
            if(head1.data<head2.data){
                temp.next=head1;
                head1=head1.next;
                temp=temp.next;
            }else{
                temp.next=head2;
                head2=head2.next;
                temp=temp.next;
            }
        }
        if(head1!=null){
            temp.next=head1;
        }
        if(head2!=null){
            temp.next=head2;
        }
        return MergedLL.next;
    }
    public static Node mergeSort(Node head){
        if(head==null || head.next==null){
            return head;
        }
        Node mid=getMid(head);
        Node rightHead=mid.next;
        mid.next=null;
        Node head1=mergeSort(head);
        Node head2=mergeSort(rightHead);
        return merge(head1,head2);
    }
    public static void main(String args[]){
        MergeSort ll= new MergeSort();
        ll.addAtLast(11);
        ll.addAtLast(0);
        ll.addAtLast(32);
        ll.addAtLast(1);
        ll.addAtLast(5);
        print(head);
        head= mergeSort(head);
        print(head);
    }
    public static void print(Node head){
        System.out.println("printing");
        Node temp=head;
        while(temp!=null){
            System.out.println(temp.data);
            temp=temp.next;
        }
    }
}
