//GeeksForGeeks Link: https://practice.geeksforgeeks.org/problems/clone-a-linked-list-with-next-and-random-pointer/1

//WITH T.C.=O(n) & S.C.=O(n)
class Solution
{
    public:
    void insertAtTail(Node* &head, Node* &tail, int d){
        Node* newNode= new Node(d);
        if(head==NULL){
            head=newNode;
            tail=newNode;
            return;
        }
        else{
            tail->next=newNode;
            tail=newNode;
        }
    }
    Node *copyList(Node *head)
    {
        //Write your code here
        Node* cloneHead=NULL;
        Node* cloneTail=NULL;
        
        Node* temp= head;
        while(temp!=NULL){
            insertAtTail(cloneHead,cloneTail,temp->data);
            temp=temp->next;
        }
        
        //making a map;
        unordered_map<Node*,Node*> mapping;
        Node* originalNode=head;
        Node* cloneNode=cloneHead;
        
        while(originalNode!=NULL){
            mapping[originalNode]=cloneNode;
            originalNode=originalNode->next;
            cloneNode=cloneNode->next;
        }
        
        //setting arb pointers
        originalNode=head;
        cloneNode=cloneHead;
        while(originalNode!=NULL){
            cloneNode->arb=mapping[originalNode->arb];
            cloneNode=cloneNode->next;
            originalNode=originalNode->next;
        }
        return cloneHead;
    }

};
