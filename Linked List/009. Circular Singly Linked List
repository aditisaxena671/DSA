#include<iostream>
using namespace std;
class Node{
	public:
		int data;
		Node* next;
		
		Node(int data){
			
			this->data=data;
			this->next=NULL;
		}
		~Node(){
			int value=this->data;
			if(this->next!=NULL){
				delete next;
				next=NULL;
			}
			cout<<"memory freed for "<<value<<endl;
		}
};
void insert(int data,int element,Node* &tail){
	Node* newNode= new Node(data);
	if(tail==NULL){
		
		tail=newNode;
		newNode->next=newNode;
	}
	else{
		Node* temp=tail;
		while(temp->data!=element){
			temp=temp->next;
		}
		newNode->next=temp->next;
		temp->next=newNode;
		tail=newNode;
	}
}
void print(Node* &tail){
	Node* temp=tail;
	do{
		cout<<temp->data<<" ";
		temp=temp->next;
	}while(temp!=tail);
	cout<<endl;
}
void deletion(int value,Node* &tail){
	if(tail==NULL){
		cout<<"Linked List Is Empty";
	}else{
		Node* prev=tail;
		Node* curr=prev->next;
		if(curr==prev){
			tail=NULL;
		}
		while(curr->data!=value){
			prev=curr;
			curr=curr->next;
		}
		prev->next=curr->next;
		curr->next=NULL;
		delete curr;
	}
	
}
int main(){
	Node* tail=NULL;
	insert(1,2,tail);
	insert(2,1,tail);
	insert(4,2,tail);
	insert(3,2,tail);
	print(tail);
	deletion(1,tail);
	print(tail);
	return 0;
}
